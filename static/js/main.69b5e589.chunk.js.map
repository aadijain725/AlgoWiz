{"version":3,"sources":["components/NavBar.js","components/testJson/HomePageParser.js","components/HomePageTab.js","components/HomePageTopics.js","components/AlgoWiz Logo.png","components/HomePageIntroduction.js","components/IntroductionText.js","components/helpers/APIHelper.js","components/HomePage.js","components/quizComps/Question.js","components/quizComps/Progress.js","components/quizComps/Result.js","components/QuizPage.js","components/lessonComps/LessonCol.js","components/lessonComps/LessonRow.js","components/viz/VizSelectionRect.js","components/viz/VizCodeLine.js","components/viz/VizCode.js","components/viz/VizSelectionSort.js","components/viz/VizRoot.js","components/lessonComps/LessonPage.js","components/Gutter.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Navbar","id","className","Nav","Item","to","React","Component","HomePageParser","topic","index","this","i","data","length","all_information","info2","topic_details","push","HomePageTab","parsedData","props","allCards","getAllCards","getInfo","Container","fluid","map","counter","idx","arr","cardsArray","console","log","getCard","description","class","style","color","fontSize","padding","cardData","Card","border","borderRadius","Row","Col","Body","Title","title","Img","variant","src","imageURL","alt","width","height","Text","lessonID","Button","quizID","HomePageTopics","Tabs","defaultActiveKey","Tab","eventKey","HomePageIntroduction","logo","sm","styleintro","APIHelper","path","method","url","process","fetch","credentials","headers","then","response","json","result","error","Promise","reject","HomePage","state","homeData","setState","catch","err","xs","Question","submit","selected","classList","options","option","ListGroup","action","setClasses","onClick","onSelect","toggleClass","value","Subtitle","qnum","getOptions","Progress","type","curr","total","ProgressBar","animated","now","Result","href","QuizPage","handleSelect","ans","submitted","showSubmit","numCorrect","handleSubmit","getAnswer","handleContinue","match","params","window","info","correct_ans","feedbacks","option_index","getCategory","getQuestion","getFeedback","Alert","size","withRouter","LessonCol","cont","content","Image","text","LessonRow","cols","k","VizSelectionRect","textAlign","isIndex","motion","div","layoutId","isMin","layout","v","backgroundColor","c","VizCodeLine","isSelected","children","VizCode","line","step","VizSelectionSort","reset","cancelTimer","current","shuffle","j","min","play","intervalID","setInterval","timer","pause","advanceAlgo","first","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","clearInterval","st","AnimateSharedLayout","elem","VizRoot","engineRef","createRef","ref","LessonPage","lessonData","getData","bind","rows","row","Gutter","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69b5e589.chunk.js","sourcesContent":["import './css/NavBar.css';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Nav, Navbar} from 'react-bootstrap';\n\nexport class NavBar extends React.Component {\n    render() {\n        // Render a nav component with link to home page for now\n        return(  \n            <Navbar id='nav' className='px-5'>\n                <Nav.Item><Link to='/' id=\"navLogo\">\n                AlgoWiz\n                </Link></Nav.Item>\n            </Navbar>\n        );\n    }\n}\n\nexport default NavBar;","\nimport data from \"./homepage.json\"\nexport default class HomePageParser {\n  topic = \"\";\n  index =0;\n  constructor(topic) {\n    this.topic  = topic\n    for(let i =0; i< data.length; i++) {\n      //console.log(data[i][\"topicName\"])\n      if(data[i][\"topicName\"] === this.topic) {\n        this.index = i;\n        //console.log(\"index set\" + this.index)\n      }\n    }\n  }\n  \n  getInfo() {\n    var all_information =[]\n    for(let i =0; i <data[this.index][\"data\"].length;i++) {\n      var info2 = data[this.index][\"data\"][i]\n      var topic_details = {\n        \"title\" : info2[\"algorithmName\"],\n        \"description\"  :info2[\"homePageDescription\"], \n        \"imageURL\": info2[\"imageURL\"],\n        \"quizID\": info2[\"quizID\"],\n        \"lessonID\":info2[\"lessonID\"]\n      }\n      all_information.push(topic_details)\n    }\n    return all_information\n\n  }\n  age() {\n    return data[0]\n  }\n  \n}","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport { Row, Button, Col, Card, Container,} from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nimport HomePageParser from \"./testJson/HomePageParser.js\";\n\nexport class HomePageTab extends React.Component {\n  render() {\n    var parsedData = new HomePageParser(this.props.topic);\n\n    const allCards = this.getAllCards(parsedData.getInfo());\n\n    return (\n      <Container fluid>\n      {/* <ul class=\"list-group\"> */}\n        {allCards.map((counter, idx) => (\n          <div key={idx}>{counter} </div>\n        ))}\n      {/*</Container></ul>*/}\n      </Container>\n    );\n  }\n\n  getAllCards(arr) {\n    let cardsArray = [];\n    console.log(arr);\n    for (let i = 0; i < arr.length; i++) {\n      cardsArray.push(\n        this.getCard(arr[i])\n      );\n    }\n    return cardsArray;\n  }\n  \n  styleDescription(description) {\n    // TODO: should try to avoid inline styles style the class instead\n    return (\n      <p\n        class=\"text-info\"\n        style={{ color: \"green\", fontSize: \"1.6rem\", padding: \"0.5rem\" }}\n      >\n        {\" \"}\n        {description}\n      </p>\n    );\n  }\n\n  getCard(cardData) {\n    let cards = (\n      <Card\n        style={{\n          /*width: \"75rem\",\n          height: \"22rem\",*/\n          border: \"9px solid #1C6EA4\",\n          borderRadius: \"4px\",\n        }}\n        className=\"card\"\n      >\n        <Container fluid>\n          <Row>\n            <Col>\n              <Card.Body>\n                <Card.Title>{cardData.title}</Card.Title>\n                <Card.Img\n                  variant=\"top\"\n                  src={cardData.imageURL}\n                  className=\"img-fluid\"\n                  alt=\"Responsive image\"\n                  style={{ width: \"80%\", height: \"70%\" }}\n                />\n              </Card.Body>\n            </Col>\n            <Col>\n              <Card.Body>\n                <Card.Text>{cardData.description}</Card.Text>\n              </Card.Body>\n              <Card.Body>\n                <Link to={`lesson/${cardData.lessonID}`}>\n                  <Button\n                    variant=\"primary\"\n                    className=\"btn btn-danger btn-sm m-5 stretched\"\n                  >\n                    <h4>Lesson</h4>\n                  </Button>\n                </Link>\n                <Link to={`quiz/${cardData.quizID}`}>\n                  <Button\n                    variant=\"primary\"\n                    className=\"btn btn-primary btn-sm m-5 stretched\"\n                  >\n                    <h4>Go to Quiz</h4>\n                  </Button>\n                </Link>\n              </Card.Body>\n            </Col>\n          </Row>\n        </Container>\n      </Card>\n    );\n    return cards;\n  }\n}\nexport default HomePageTab;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Tabs,\n  Tab,\n  Row,\n  Col,\n  Container\n} from \"react-bootstrap\";\n\nimport HomePageTab from \"./HomePageTab\";\n\nexport class HomePageTopics extends React.Component {\n  render() {\n    /* TODO: 1. These should not be hardcoded, they should be built from the built \n     * from the fetched JSON data\n     * 2. avoid inline styles\n     */\n\n    return (\n      <div>\n        <Container fluid>\n          <Row>\n            <Col>\n              <Tabs\n                defaultActiveKey=\"Search\"\n                id=\"uncontrolled-tab-example\"\n                className=\"nav nav pills\"\n                style={{ color: \"red\", fontSize: \"150%\", padding :\"0.5em\" }}\n              >\n                  \n                <Tab eventKey=\"Search\" title=\"Search\" key = \"a\" >\n                  <HomePageTab topic=\"Search\" />\n                </Tab>\n\n                <Tab eventKey=\"home\" title=\"Graph\" key = \"b\">\n                  <HomePageTab topic=\"Graph\" /> \n                </Tab>\n\n                <Tab eventKey=\"Sorting\" title=\"Sorting\" key = \"c\">\n                  <HomePageTab topic=\"Sorting\" />\n                </Tab>\n              </Tabs>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default HomePageTopics;\n","export default __webpack_public_path__ + \"static/media/AlgoWiz Logo.556a20a2.png\";","import React from \"react\";\nimport {\n  Row,\n  Col,\n  Container,\n} from \"react-bootstrap\";\nimport logo from \"./AlgoWiz Logo.png\";\n\nimport text from \"./IntroductionText.js\"\n\nexport class HomePageIntroduction extends React.Component {\n  \n  styleintro(description) {\n    return (\n      <p id=\"introFont\">\n        {\" \"}\n        {description}\n      </p>\n    );\n  }\n\n  render() {\n    return (\n      <Container padding=\"left-align\">\n        <Row>\n          <h1 style ={{padding:\"centre-align\"}}>Welcome to AlgoWiz</h1>\n        </Row>\n        <Row>\n          <Col>\n            {\" \"}\n            <img\n              src={logo}\n              className=\"img-fluid\"\n              alt =\"intro logo\"\n              width=\"50%\"\n            ></img>{\" \"}\n          </Col>\n          <Col sm={5}>\n            {\" \"}\n            {this.styleintro(text)}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default HomePageIntroduction;\n","const text= \"Algowiz is a highly interactive web-based application aimed at spreading the love and knowledge \"\n + \"we have for computer science. Initially, it will act as primarily an academic aid to students \"\n + \"and teachers alike. It will cover a wide array of topics ranging from sorting and searching algorithms to exploring graphs. \"\n + \"The experience will include \"\n + \"a separate section for each of the various topics. Each of these sections will have a \"  \n + \"study guide, a quiz, and a visualizer to help visualize the concepts.\";\n\nexport default text;","/**\n * Makes an Async fetch request to the API, must provide a path for the fetch\n * ie: Do not supply path = 'http://localhost:8080/algowiz/quiz/quizID'\n * instead use : path = 'quiz/quizID' \n * Expects to receive and return json data, may misbehave if other data returned\n * use promise syntax in conjunction with this method. Use catch to handle errors\n * Example usage: \n * APIHelper('quiz/quizID')\n * .then(result => {\n * \t\t// code for result\n * })\n * .catch(err => {\n * \t\t// code for error handling\n * })\n * @param {string} path, path to fetch from API\n * @param {string} method, optional, defaults to GET, (POST... etc)\n */\nfunction APIHelper(path, method = 'GET') {\n\t// check .env for which host to use (local vs production)\n\t// TODO: Sanitize path input?\n\tconst url = `${process.env.REACT_APP_API_URL}/${path}`;\n\t// return a promise\n\treturn fetch(url, {\n\t\tcredentials:'include',\n\t\tmethod,\n\t\theaders : { \n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Accept': 'application/json'\n\t\t}\n\t})\n\t.then(response => response.json())\n\t// return either the result or an error\n\t.then(result => {\n\t\t// pass along the json result\n\t\treturn result;\n\t}, (error) => {\n\t\t// Pass along the error\n\t\treturn Promise.reject(error);\n\t});\n}\n\nexport default APIHelper;\n","import React from 'react';\nimport HomePageTopics from './HomePageTopics';\nimport { HomePageIntroduction } from './HomePageIntroduction';\nimport { Container, Row, Col } from 'react-bootstrap';\n\n// Import the API helper class\nimport APIHelper from './helpers/APIHelper';\n\nexport class HomePage extends React.Component {\n    // Older style React constructor\n    constructor(props) {\n        super(props);\n        this.state = {\n            homeData: null\n        }\n    }\n\n    componentDidMount() {\n        // Set state from backend using APIHelper function\n        APIHelper('home')\n        .then(homeData => {\n            this.setState({homeData})\n        })\n        .catch(err => {\n            console.log(err);\n        })\n\n        // TEmp Code test calls to published backend\n        console.log('Testing published fetch');\n        fetch('https://springboot-postgresql-algowiz.herokuapp.com/api/v1/home', {\n            credentials:'include',\n            method: 'GET',\n            headers : { \n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        // return either the result or an error\n        .then(result => {\n            // pass along the json result\n            \n            console.log(result);\n        })\n        .catch(err => console.log(err));\n\n\n\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                <Row><Col xs='auto'>\n                    <HomePageIntroduction />\n                </Col></Row>\n                <Row><Col xs='auto'>\n                    <HomePageTopics/>\n                </Col></Row>\n            </Container>\n        );\n    }\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport { Card, ListGroup, Container } from \"react-bootstrap\";\n\nexport class Question extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"submit in curr \", this.props.submit);\n    this.state = {}\n    // console.log(\"From question, \", this.props.value);\n  }\n\n  // selectButton(value) {\n  //   // console.log(value);\n  //   // console.log(this.props.options[value]);\n  //   this.setState({\n  //       ans: this.props.options[value]\n  //   });\n  // }\n\n  toggleClass(i) {\n    console.log(\"toggling for i: \", this.state.selected);\n    this.setState({ selected: i });\n  }\n\n  setClasses(i) {\n    let classList = \"\";\n    this.state.selected && this.state.selected === i + 1? classList += \"active \" : classList =\"\";\n    console.log(\"class List: \", classList);\n    return classList;\n  }\n\n  // Funtion to get the different questions in the card\n  getOptions() {\n    let options = [];\n    for (let i = 0; i < this.props.options.length; i++) {\n      let option = (<ListGroup.Item\n        action\n        className = {this.setClasses(i) } // this.state.selected && this.state.selected == i + 1?  \"active\" : \"\"\n        onClick={() => {\n          this.props.onSelect(this.props.options[i], i);\n          this.toggleClass(i + 1);\n        }}\n      >\n        {this.props.options[i]}\n      </ListGroup.Item>);\n      options.push(option)\n    }\n    return options;\n  }\n\n  \n\n  render() {\n    return (\n      <Container>\n          <Card id = \"question-card\" className=\"quiz-question-card\">\n            <Card.Body>\n              <Card.Title> {this.props.value} </Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\"> </Card.Subtitle>\n              <Card.Text>Question #{this.props.qnum + 1} </Card.Text>\n              <ListGroup \n                className = {!this.props.submit ? \"Disabled\":\"\"}\n                variant=\"flush\"\n              >\n                {this.getOptions()}\n              </ListGroup>\n            </Card.Body>\n          </Card>\n      </Container>\n    );\n  }\n}\n\nexport default Question;\n","import React from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\n// Progress Bar component for the quiz to keep track of number of qs answered\nexport class Progress extends React.Component {\n    \n\n    render() {\n        return (\n            <Container id = \"progress-bar\">\n                <Row>\n                    <h3> {this.props.type} {this.props.curr}/{this.props.total} </h3>\n                </Row>\n                <Row>\n                    <ProgressBar animated variant=\"info\"  now={(this.props.curr/this.props.total)*100} />\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Progress;","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Row, Button,Card, Container } from \"react-bootstrap\";\nimport Progress from \"./Progress\"\nexport class Result extends React.Component {\n  \n/* commenting out on merge, not sure if needed\n    render() {\n        return <h1> Good Job, you got {this.props.numc} correct </h1>\n    }\n*/\n\nrender() {\n    return (\n    <Container id = \"results-page\">\n    <Row>\n      <Card style={{ width: \"40rem\" }}>\n        <Card.Img variant=\"top\" src=\"https://bsmedia.business-standard.com/_media/bs/img/article/2018-06/14/full/1528966655-8748.jpg\" />\n        <Card.Body>    \n          <Card.Title>Here are your resuts for the quiz</Card.Title>\n          \n          <Progress type =\"Your Score :\" curr ={this.props.curr} total ={this.props.total}></Progress>\n          <Link to='/'>\n            <Button className=\"btn btn-primary btn-m m-5\">Go Back to Home</Button>\n          </Link>\n          <Link to=\"/lesson/l1\">\n                  <Button\n                    href=\"/lesson\"\n                    className=\"btn btn-danger btn-m m-5\"\n                  >\n                    Go to corresponding Lesson Page\n                  </Button>\n          </Link>\n        </Card.Body>\n      </Card>\n      </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Result;\n","import React from 'react';\nimport Question from '../components/quizComps/Question'\nimport Progress from '../components/quizComps/Progress'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {withRouter} from 'react-router-dom';\nimport APIHelper from './helpers/APIHelper'\nimport {Container, Row, Col, Alert, Button} from 'react-bootstrap'\nimport Result from './quizComps/Result';\n\n// Functional component for getting correct user feedback depending on the \n// User's answer and the correct answer \nexport function getUserFeedback(correct_ans, ans, feedbacks, option_index) {\n    console.log(feedbacks);\n    console.log(option_index)\n    if (!ans) {\n        return <Alert \n            id = \"feedback\" \n            className = \"mt-5\"\n            variant = 'warning'> \n            Please select an answer before submitting \n        </Alert>\n    } else if (correct_ans === ans){\n        return <Alert \n            id = \"feedback\" \n            className = \"mt-5\"\n            variant = 'success'> \n            {feedbacks[option_index]}\n        </Alert>\n    } else {\n        return <Alert \n            id = \"feedback\" \n            className = \"mt-5\"\n            variant = 'danger'> \n            {feedbacks[option_index]}\n        </Alert>\n    }\n}\n\n\nexport class QuizPage extends React.Component {\n    constructor(props) {\n        super(props);\n        // console.log(\"length of data\", window.info.length);\n        this.state = {\n            qnum : 0,\n            ans: null,\n            submitted: false,\n            showSubmit: true,\n            numCorrect: 0,\n            data: null \n        };\n    }\n\n    componentDidMount() {\n        APIHelper(`quiz/${this.props.match.params.quizID}`)\n        .then(homeData => {\n            console.log(\"data: \", homeData);\n            window.info = homeData[\"questionsList\"];\n            window.title = homeData[\"title\"];\n            this.setState({\n                data: homeData \n            });\n\n\n        })\n        .catch(err => {\n            console.log(err);\n        })\n\n        // window.info = data2[\"questions\"];\n        // window.title = data2[\"title\"];\n    }\n\n    // Function that handles selecting buttons \n    handleSelect = (ans, idx) => {\n        console.log(\"index in handleSelect is:\", idx);\n        this.setState({\n            qnum: this.state.qnum, \n            ans: ans,\n            submitted: false,\n            showSubmit: true,\n            numCorrect: this.state.numCorrect,\n            idx: idx\n        })\n    }\n    // Function that handles user submissions\n    handleSubmit = (ans) => {\n        console.log(\"index in handleSubmit is:\", this.state.idx);\n        if (ans == null) {\n            this.setState({\n                qnum: this.state.qnum, \n                ans: ans,\n                submitted: true,\n                showSubmit: false,\n                idx: this.state.idx,\n                numCorrect: this.state.numCorrect\n            })\n        } else  if (ans === this.getAnswer(this.state.qnum)) {\n            this.setState({\n                qnum: this.state.qnum, \n                ans: ans,\n                submitted: true,\n                showSubmit: false,\n                idx: this.state.idx,\n                numCorrect: this.state.numCorrect + 1\n            })\n        } else {\n            this.setState({\n                qnum: this.state.qnum, \n                ans: ans,\n                submitted: true,\n                showSubmit: false,\n                idx: this.state.idx,\n                numCorrect: this.state.numCorrect\n            })\n        }\n    }\n\n    // Function that handles continue functionality\n    handleContinue =  (ans) => {\n        if (ans == null) {\n            this.setState({\n                qnum: this.state.qnum, \n                ans: ans,\n                submitted: true,\n                showSubmit: true,\n                idx: this.idx,\n                numCorrect: this.state.numCorrect\n            })\n        } else  {\n            this.setState({\n                qnum: this.state.qnum + 1, \n                ans: ans,\n                submitted: true,\n                showSubmit: true,\n                idx: this.idx,\n                numCorrect: this.state.numCorrect\n            })\n        }\n    }\n\n    render() {\n        if (window.info && window.info.length > this.state.qnum) {\n        return(\n            <Container className = \"quiz-page\">\n                {/* Top row -- topic + progress bar */}\n                <Row>\n                    <Col sm= {6}> <h2>Quiz Page: {this.getCategory()}</h2> </Col>\n                    <Col sm = {6}> <Progress id = \"quiz-progress-bar\" type = \"Questions Answered\" curr = {this.state.qnum} total = {window.info.length}></Progress> </Col>\n                </Row>\n                <Row>\n                    <Col sm = {3}></Col>\n                    <Col sm = {6}>\n                        {!this.state.submitted &&\n                        <Question \n                    value = {this.getQuestion(this.state.qnum)} \n                    qnum = {this.state.qnum}\n                    onSelect = {this.handleSelect}\n                    options = {this.getOptions(this.state.qnum)}\n                    ></Question>}\n                     </Col>\n                </Row>\n                {this.state.submitted === true &&\n                    <Row>\n                        {getUserFeedback(this.getAnswer(this.state.qnum), this.state.ans, this.getFeedback(this.state.qnum), this.state.idx)}\n                    </Row>\n                }\n                {/* Bottom row -- submit */}\n                <Row>\n                    <Col sm={3}></Col>\n                    <Col>\n                        {this.state.showSubmit && \n                            <Button\n                            id=\"quiz-submit-btn\"\n                            variant=\"outline-primary\"\n                            size=\"lg\"\n                            onClick={()=> {\n                                this.handleSubmit(this.state.ans)\n                                }}\n                            >\n                            {\" \"}\n                            Submit{\" \"}\n                            </Button>\n                        }\n                        {!this.state.showSubmit && \n                        <Button\n                            id=\"quiz-submit-btn\"\n                            variant=\"outline-primary\"\n                            size=\"lg\"\n                            onClick={()=> {\n                                this.handleContinue(this.state.ans)\n                                this.setState({\n                                    qnum: this.state.qnum + 1, \n                                    ans: this.ans,\n                                    submitted : false,\n                                    showSubmit: true,\n                                    numCorrect: this.state.numCorrect\n                                    });\n                                }}\n                            >\n                            {\" \"}\n                            Continue{\" \"}\n                        </Button>\n                        }\n                    </Col>\n                    <Col sm={3}></Col>\n                </Row>\n                \n            </Container>\n        )\n        } else if (window.info){\n            return <Result curr = {this.state.numCorrect} total = {window.info.length}> </Result>\n        } else {\n            return (<h1>Loading ... </h1>)\n        }\n    }\n\n    // Fetches the question details for the current topic\n    getQuestion (qnum) {\n        return window.info[qnum][\"question\"];\n    }\n    // Fetches the title name for the current topic\n    getCategory () {\n        return window.title;\n    }\n\n    // Fetches the question options list for the current question that is selected\n    getOptions (qnum) {\n        return window.info[qnum][\"options\"];\n    }\n\n    // Fetches the correct answer for the current question that is selected\n    getAnswer(qnum) {\n        let index = window.info[qnum][\"correctAnswer\"];\n        console.log(\"answer idx is \", index);\n        console.log(\"answer is \", window.info[qnum][\"options\"][index]);\n        return window.info[qnum][\"options\"][index];\n    }\n\n\n    // Fetches the feedback list for the current question that is selected\n    getFeedback(qnum) {\n        return window.info[qnum][\"responses\"];\n    }\n}\n\nexport default withRouter(QuizPage);\n\n\n","import React from 'react';\nimport {Col, Image} from 'react-bootstrap';\n\nexport class LessonCol extends React.Component {\n  render() {\n\t\t// conditionally render different columns based on json contents\n\t\tconst data = this.props.content;\n\t\tlet cont;\n\t\tif (data.type === \"img\") {\n\t\t\tcont = <Image src={data.src} alt={data.alt} fluid/>\n\t\t} else if (data.type === \"p\") { \n\t\t\tcont = <p>{data.text}</p>\n\t\t} else if (data.type === \"h2\") {\n\t\t\tcont = <h2>{data.text}</h2>\n\t\t}else {\n\t\t\tcont = <p>Malformed Column Content</p>\n\t\t}\n\t\treturn(  \n\t\t\t<Col xs={data.xs}>{cont}</Col>\n\t\t);\n   }\n}\n\nexport default LessonCol;","import React from 'react';\nimport {Row} from 'react-bootstrap';\nimport LessonCol from './LessonCol';\n\nexport class LessonRow extends React.Component {\n\trender() {\n\t\t// Render a row and create a column for each, forward the params\n\t\treturn(  \n\t\t\t<Row>{\n\t\t\t\t\tthis.props.cols.map((k,i) => {\n\t\t\t\t\t\t\treturn <LessonCol key={i} content={k}/>\n\t\t\t\t\t})\n\t\t\t}</Row>\n\t\t);\n\t}\n}\n\nexport default LessonRow;","import React from 'react';\nimport { motion } from \"framer-motion\";\n\nconst VizSelectionRect = (props) => {\n\n\treturn (\n\t\t<div style={{textAlign:'center'}}>\n\t\t\t{props.isIndex && (\n\t\t\t\t<motion.div layoutId='indexArrow' id='indexArrow'>\n\t\t\t\t\t<p style={{textAlign:'center'}}>idx</p>\n\t\t\t\t\t<i className='fa fa-chevron-down'/>\n\t\t\t\t</motion.div>\n\t\t\t)}\n\t\t\t{props.isMin && (\n\t\t\t\t<motion.i layoutId='minArrow' id='minArrow'>\n\t\t\t\t\t<p style={{textAlign:'center'}}>min</p>\n\t\t\t\t\t<i className='fa fa-chevron-down'/>\n\t\t\t\t</motion.i> \n\t\t\t)}\n\t\t\t<motion.div className='rec' layout style={{\n\t\t\t\theight:`${props.data.v + 1}rem`, \n\t\t\t\tbackgroundColor:`hsl(${props.data.c}, 100%, 50%)`\n\t\t\t}}>\n\t\t\t\t<p>{props.data.v}</p>\n\t\t\t</motion.div>\n\t\t</div>\n\t);\n}\n\nexport default VizSelectionRect;","import React from 'react';\n\n\nconst VizCodeLine = ({isSelected = false, children}) => {\n\treturn (\n\t\t\t<li>\n\t\t\t\t{isSelected && <i className='fa-li fa fa-chevron-right'/>}\n\t\t\t\t<p>{children}</p>\n\t\t\t</li>\n\t);\n}\n\nexport default VizCodeLine;","import React from 'react';\nimport VizCodeLine from './VizCodeLine';\n\nconst VizCode = (props) => {\n\tconst line = props.step % 3;\n\n\treturn (\n\t\t<ul id='vizCode' className='fa-ul'>\n\t\t\t<VizCodeLine isSelected={line === 2}>{'move the index of the unsorted subarray'} </VizCodeLine>\n\t\t\t<VizCodeLine isSelected={line === 0}>{'find the minimum element in unsorted array'}</VizCodeLine>\n\t\t\t<VizCodeLine isSelected={line === 1}>{'swap the found minimum element with the first element'}</VizCodeLine>\n\t\t</ul>\n\t);\n}\n\nexport default VizCode;","import React from 'react';\nimport { AnimateSharedLayout } from \"framer-motion\";\nimport Rect  from './VizSelectionRect';\nimport VizCode from './VizCode';\n\nexport class VizSelectionSort extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcurrent: [\n\t\t\t\t{v:3}, {v:2}, {v:5}, {v:1}, {v:4}, \n\t\t\t\t{v:6}, {v:9}, {v:8}, {v:7}, {v:5}\n\t\t\t],\n\t\t\ti: 0,\n\t\t\tj: 0,\n\t\t\tmin: 0,\n\t\t\tstep: 0,\n\t\t\tintervalID: null\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\t// Choose random colors for each bar, use H 0-360 in hsv format\n\t\t// Also give it an id\n\t\tconst current = [...this.state.current];\n\t\tfor (let i = 0; i < current.length; i++) {\n\t\t\tcurrent[i].c = Math.floor(Math.random()*361);\n\t\t\tcurrent[i].id = 'rect' + i;\n\t\t}\n\t\tthis.setState({current});\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// if a timer is running cancel it\n\t\tthis.cancelTimer();\n\t}\n\n\t// On reset, update state with default values and shuffle the array\n\treset = () => {\n\t\tconsole.log('pressed reset');\n\t\tthis.cancelTimer();\n\t\tthis.setState({\n\t\t\tcurrent: this.shuffle([...this.state.current]),\n\t\t\ti: 0,\n\t\t\tj: 0,\n\t\t\tstep: 0,\n\t\t\tmin: 0\n\t\t})\n\t}\n\n\t// On play state the timer for animation \n\tplay = () =>  {\n\t\tconsole.log('pressed play');\n\t\t// Don't set a new timer if one already exists\n\t\tif (this.state.intervalID !== null) return;\n\t\t// TODO: check if should call step once first\n\t\tlet intervalID = setInterval(this.timer, 500);\n\t\tthis.setState({intervalID});\n\t}\n\n\t// \n\tpause = () => {\n\t\tconsole.log('pressed pause');\n\t\tthis.cancelTimer();\n\t}\n\n\t/** Moves the state up 1 step in the algorithm\n\t * \tReturns true if algorithm has completed\n\t*/\n\tstep = () => {\n\t\tconsole.log('pressed step');\n\t\t// do not allow step to be pressed if animation playing\n\t\tif (this.state.intervalID === null) this.advanceAlgo();\n\t}\n\n\tadvanceAlgo = () => {\n\t\t// grab state (never mutate state directly)\n\t\tlet i = this.state.i;\n\t\tlet j = this.state.j;\n\t\tlet min = this.state.min;\n\t\tlet arr = [...this.state.current];\n\t\t\n\t\t// Do not step further if done sorting\n\t\tif (i >= arr.length - 1) return true;\n\n\t\t// Break up the algorithm into steps so we can animate each independently\n\t\tswitch (this.state.step % 3) {\n\t\t\tcase 0:\n\t\t\t\t// Find the minimum element in unsorted array \n        min = i; \n        for (j = i + 1; j < arr.length; j++) {\n        \tif (arr[j].v < arr[min].v) {\n            min = j; \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\t// Swap the found minimum element with the first element \n\t\t\t\tlet first = arr[i];\n\t\t\t\tarr[i] = arr[min];\n\t\t\t\tarr[min] = first;\n\t\t\t\t// change min so the arrow moves with the element\n\t\t\t\tmin = i;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\t// increment i\n\t\t\t\ti++;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Something in step function broke.');\n\t\t}\n\t\t// update the state\n\t\tthis.setState({\n\t\t\ti,\n\t\t\tj,\n\t\t\tmin,\n\t\t\tstep: this.state.step + 1,\n\t\t\tcurrent: arr\n\t\t})\n\t\treturn false;\n\t}\n\n\tshuffle = (array) => {\n\t\tlet currentIndex = array.length, temporaryValue, randomIndex;\n\t\n\t\t// While there remain elements to shuffle...\n\t\twhile (0 !== currentIndex) {\n\t\t\t// Pick a remaining element...\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\tcurrentIndex -= 1;\n\t\n\t\t\t// And swap it with the current element.\n\t\t\ttemporaryValue = array[currentIndex];\n\t\t\tarray[currentIndex] = array[randomIndex];\n\t\t\tarray[randomIndex] = temporaryValue;\n\t\t}\n\t\treturn array;\n\t}\n\n\t// timer callback, cancels timer when animation finishes\n\ttimer = () => {\n\t\tif (this.advanceAlgo()) {\n\t\t\tthis.cancelTimer();\n\t\t}\n\t} \n\n\t// clears the timer and resets state\n\tcancelTimer = () => {\n\t\tif (this.state.intervalID === null) return;\n\t\tclearInterval(this.state.intervalID);\n\t\tthis.setState({intervalID: null});\n\t\tconsole.log('timer canceled');\n\t}\n\n\trender() {\n\t\tconst st = this.state;\n\t\treturn(\n\t\t\t<div id='vizSelectSortEngine'>\n\t\t\t\t<div style={{width:'60%' }}>{\n\t\t\t\t\t<AnimateSharedLayout>\n\t\t\t\t\t\t<div className='array' >\n\t\t\t\t\t\t\t{this.state.current.map(elem => (\n\t\t\t\t\t\t\t\t<Rect \n\t\t\t\t\t\t\t\t\tkey={elem.id} \n\t\t\t\t\t\t\t\t\tdata={elem} \n\t\t\t\t\t\t\t\t\tisIndex={st.current[st.i] === elem}\n\t\t\t\t\t\t\t\t\tisMin={st.current[st.min] === elem}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</AnimateSharedLayout>\n\t\t\t\t}</div>\n\t\t\t\t<div style={{width:'40%'}}><VizCode step={this.state.step}/></div>\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default VizSelectionSort;\n","import './viz.css';\nimport React from 'react';\nimport {Row, Col, Button} from 'react-bootstrap';\n// TODO: find way to import specific engines\nimport VizSelectionSort from './VizSelectionSort';\n\n/**\n * This component is the root for all Visualizers.\n * Contains the UI common to all versions.\n * TODO: May need to be refactored in the future \n */\nexport class VizRoot extends React.Component {\n    constructor(props) {\n        super(props);\n        // create a ref to call playback on the viz engine\n        this.engineRef = React.createRef();\n    }\n\n    // Render for root component\n    render() {\n        return(\n            <>\n            {/** Viz Engine Goes here \n             * TODO: add prop to conditionally render correct viz engine\n            */}\n            <VizSelectionSort ref={this.engineRef}/>\n            <Row className='vizRow'>\n                <Col xs='12' className='text-center justify-content-centers'>\n                    <Button variant='primary' \n                        onClick={()=> this.engineRef.current.reset()} className='round'>\n                        <i className=\"fa fa-undo\" />\n                        </Button>\n                    <Button variant='primary' \n                        onClick={()=> this.engineRef.current.play()} className='round'>\n                        <i className=\"fa fa-play\" />\n                    </Button>\n                    <Button variant='primary' \n                        onClick={()=> this.engineRef.current.pause()} className='round'>\n                        <i className=\"fa fa-pause\" />\n                    </Button>\n                    <Button variant='primary' \n                        onClick={()=> this.engineRef.current.step()} className='round'>\n                        <i className=\"fa fa-step-forward\" />\n                    </Button>\n                </Col>\n            </Row>\n            </>\n        )\n    }\n}\n\n\nexport default VizRoot;","\nimport React from 'react';\nimport {withRouter, Link} from 'react-router-dom';\nimport {Row, Col, Container, Button} from 'react-bootstrap';\nimport LessonRow from './LessonRow';\nimport VizRoot from '../viz/VizRoot'\nexport class LessonPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lessonData: null\n        }\n        // TODO: once local backend serves lesson properly then change this\n        this.getData = this.getData.bind(this);\n    }\n\n    componentDidMount() {\n        // TODO: change to APIHelper once backend fixed\n        this.getData();\n    }\n\n    // TODO: once backend fixed this can be replaced with APIHelper\n    getData() {\n        fetch(`./lesson/${this.props.match.params.lessonID}`, {\n            headers : { \n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(lessonData => {\n            this.setState({\n                lessonData\n            })\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    render() {\n        let content;\n        const data = this.state.lessonData;\n        // conditionally render loading bar or content\n        if (this.state.lessonData == null) {\n            content = <p>Loading...</p>;\n        } else {\n            content = \n            <Container fluid id='lessonContent'>\n                <Row><Col>\n                    <h1>{data.title}</h1>\n                    <p>{data.description}</p>\n                </Col></Row>\n                {data.rows.map((row, i) => {\n                    // create a row for each element in array and pass them params\n                    return <LessonRow key={i} cols={row.cols}/>\n                })}\n                <Row className='justify-content-md-center'><VizRoot id={data.lessonID}/></Row>\n                <Row className='my-2'><Col className='text-center'>\n                    <Link to={`/quiz/${data.quizID}`}><Button variant='primary'>Start Quiz</Button></Link>\n                </Col></Row>\n            </Container>;\n        }\n\n        return(\n            <Container fluid id='lesson'>\n                {content}\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(LessonPage);","import React from 'react';\nimport {Col} from 'react-bootstrap';\n\n/**\n * This Class should only be used as a gutter \n * (bootstrap column) inside a bootstrap <Row> component\n */\n\nexport class Gutter extends React.Component {\n\trender() {\n\t\t\treturn(\n\t\t\t\t<Col xs='1' className='gutter'></Col>\n\t\t\t);\n\t}\n}\n\nexport default Gutter;","// import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport {\n\t// BrowserRouter as Router, using Hash Router for github pages\n\tHashRouter as Router,\n\tSwitch,\n\tRoute\n} from 'react-router-dom';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport Navbar from './components/NavBar';\nimport HomePage from './components/HomePage';\nimport QuizPage from './components/QuizPage';\nimport LessonPage from './components/lessonComps/LessonPage';\nimport Gutter from './components/Gutter';\n\nfunction App() {\n\tconsole.log(process.env.REACT_APP_API_URL);\n\treturn (\n\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t<Navbar/> \n\t\t\t<Container fluid >\n\t\t\t\t<Row><Gutter/>\n\t\t\t\t<Col xs='10' id='appBody'>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t\t\t<HomePage/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path='/lesson/:lessonID'>\n\t\t\t\t\t\t\t<LessonPage/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path='/quiz/:quizID'>\n\t\t\t\t\t\t\t<QuizPage/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path='*'>\n\t\t\t\t\t\t\t<h2>404 Bad Route</h2>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Col>\n\t\t\t\t<Gutter/>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}